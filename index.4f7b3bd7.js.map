{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/components/header/index.js","src/js/components/header/currentLink.js","src/js/components/header/mobileMenu.js","src/js/components/header/user.js","src/js/components/header/switcher.js","src/js/components/support/index.js","src/js/components/support/slider.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/components/support/foundsList.js","src/js/components/support/founds.js","node_modules/@parcel/runtime-js/lib/runtime-c6a3f9c6b3e2f09c.js","node_modules/@parcel/runtime-js/lib/runtime-31b0b927c6a2fe38.js","node_modules/@parcel/runtime-js/lib/runtime-7e7b078a0548ba09.js","node_modules/@parcel/runtime-js/lib/runtime-2d07baddf29b9db2.js","node_modules/@parcel/runtime-js/lib/runtime-fad589aa088bd389.js","node_modules/@parcel/runtime-js/lib/runtime-fe3e5702cfab6f40.js","node_modules/@parcel/runtime-js/lib/runtime-1f9792b168976007.js","node_modules/@parcel/runtime-js/lib/runtime-48cd5609e7503525.js","node_modules/@parcel/runtime-js/lib/runtime-e539071188618a95.js","node_modules/@parcel/runtime-js/lib/runtime-b7fdedfcafe876f8.js","node_modules/@parcel/runtime-js/lib/runtime-53d4e6eb70447f33.js","node_modules/@parcel/runtime-js/lib/runtime-1d52b19241f5260c.js","node_modules/@parcel/runtime-js/lib/runtime-fe4fd01ce4e4dd0b.js","node_modules/@parcel/runtime-js/lib/runtime-6f21878e1b0668fd.js","node_modules/@parcel/runtime-js/lib/runtime-7fb2783e186d694f.js","node_modules/@parcel/runtime-js/lib/runtime-c6f7665dd3299e1c.js","node_modules/@parcel/runtime-js/lib/runtime-2047fa0152743626.js","node_modules/@parcel/runtime-js/lib/runtime-104c3d7ae0d103f4.js","node_modules/@parcel/runtime-js/lib/runtime-ff20e9ba01db1d66.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import './currentLink';\nimport './mobileMenu';\nimport './user';\nimport './switcher';\n","onCurrentLink();\n\nfunction onCurrentLink() {\n  const pathName = window.location.pathname;\n\n  if (pathName.endsWith('/')) {\n    const links = document.querySelectorAll(`[href=\"${pathName}index.html\"]`);\n\n    links.forEach(link => {\n      if (link.classList.contains('page-nav__link')) {\n        link.classList.add('page-nav__link--current');\n      }\n    });\n\n    return;\n  }\n\n  const links = document.querySelectorAll(`[href=\"${pathName}\"]`);\n\n  links.forEach(link => {\n    if (link.classList.contains('page-nav__link')) {\n      link.classList.add('page-nav__link--current');\n    }\n  });\n}\n","const mobileMenu = document.querySelector('.js-menu-container');\nconst openMenuBtn = document.querySelector('.js-open-menu');\nconst closeMenuBtn = document.querySelector('.js-close-menu');\n\nopenMenuBtn.addEventListener('click', onOpenMenu);\ncloseMenuBtn.addEventListener('click', onCloseMenu);\n\nfunction onOpenMenu() {\n  openMenuBtn.setAttribute('aria-expanded', true);\n  openMenuBtn.classList.add('menu-btn--hide');\n  closeMenuBtn.classList.remove('menu-btn--hide');\n  mobileMenu.classList.add('menu-container--is-open');\n  document.body.classList.add('body-lock');\n}\n\nfunction onCloseMenu() {\n  openMenuBtn.setAttribute('aria-expanded', false);\n  openMenuBtn.classList.remove('menu-btn--hide');\n  closeMenuBtn.classList.add('menu-btn--hide');\n  mobileMenu.classList.remove('menu-container--is-open');\n  document.body.classList.remove('body-lock');\n}\n\nwindow.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n  if (!e.matches) {\n    return;\n  }\n\n  if (!mobileMenu.classList.contains('menu-container--is-open')) {\n    return;\n  }\n\n  mobileMenu.classList.remove('menu-container--is-open');\n  openMenuBtn.classList.remove('menu-btn--hide');\n  closeMenuBtn.classList.add('menu-btn--hide');\n  openMenuBtn.setAttribute('aria-expanded', false);\n  document.body.classList.remove('body-lock');\n});\n\nwindow.addEventListener('resize', () => {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n});\n","const btnEl = document.querySelector('.js-user');\n\nif (btnEl) {\n  btnEl.addEventListener('click', () => {\n    if (window.innerWidth < 768) {\n      return;\n    }\n\n    btnEl.classList.toggle('user--is-active-btns-box');\n  });\n}\n","const KEY_LS_THEME = 'site-theme';\n\nconst Theme = {\n  LIGHT: 'light',\n  DARK: 'dark',\n};\n\nconst switcherCheckboxEl = document.querySelector('.js-switcher-theme');\nconst htmlEl = document.querySelector('html');\n\nswitcherCheckboxEl.addEventListener('click', () => {\n  const isLight = htmlEl.classList.contains('light');\n\n  const theme = isLight ? Theme.DARK : Theme.LIGHT;\n\n  onChangeTheme(theme);\n});\n\nfunction onChangeTheme(theme) {\n  const isLight = htmlEl.classList.contains('light');\n\n  if (isLight && theme !== Theme.LIGHT) {\n    localStorage.setItem(KEY_LS_THEME, JSON.stringify(Theme.DARK));\n\n    htmlEl.classList.replace('light', 'dark');\n\n    return;\n  }\n\n  if (theme !== Theme.DARK) {\n    localStorage.setItem(KEY_LS_THEME, JSON.stringify(Theme.LIGHT));\n\n    htmlEl.classList.replace('dark', 'light');\n  }\n}\n","import './slider';\n","import Swiper, { Navigation } from 'swiper';\nimport { renderFoundsList } from './foundsList';\nimport { founds } from './founds';\n\nconst foundsSliderEl = document.querySelector('.js-founds-slider');\n\nfoundsSliderEl.innerHTML = renderFoundsList(founds);\n\nnew Swiper('.swiper', {\n  direction: 'vertical',\n  loop: true,\n  slidesPerView: 4,\n  spaceBetween: 20,\n  breakpoints: {\n    768: {\n      slidesPerView: 6,\n    },\n  },\n  modules: [Navigation],\n  navigation: {\n    nextEl: '.swiper-button',\n  },\n});\n","/**\n * Swiper 9.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 10, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export function renderFoundsList(founds) {\n  const markup = founds\n    .map(\n      ({ id, imgUrl, img2xUrl, companyName, linkSupport }) => `\n     <div class=\"swiper-slide founds-list__item\">\n        <a class=\"founds-list__link\" href=\"${linkSupport} rel=\"nofollow noopener noreferrer\" target=\"_blank\">\n          ${id.padStart(2, '0')}\n          <img\n            class=\"founds-list__icon\"\n            srcset=\"${imgUrl} 1x,${img2xUrl} 2x\"\n            src=\"${imgUrl}\"\n            alt=\"${companyName}\"\n          />\n        </a>\n      </div>\n    `\n    )\n    .join('');\n\n  return `\n  <div class=\"swiper-wrapper founds-list\">\n      ${founds.length < 12 ? markup + markup : markup}\n    </div>\n  `;\n}\n","import saveTheChildrenImg from '../../../images/founds-icon/found-1.png?width=144&height=32';\nimport projectHopeImg from '../../../images/founds-icon/found-2.png?width=64&height=32';\nimport internationalMedicalCorpsImg from '../../../images/founds-icon/found-3.png?width=118&height=32';\nimport razomImg from '../../../images/founds-icon/found-4.png?width=96&height=32';\nimport actionAgainstHunterImg from '../../../images/founds-icon/found-5.png?width=51&height=32';\nimport charityFoundationSergiyPrytulaImg from '../../../images/founds-icon/found-6.png?width=96&height=32';\nimport united24Img from '../../../images/founds-icon/found-7.png?width=149&height=15';\nimport medecinsSansFrontieresImg from '../../../images/founds-icon/found-8.png?width=91&height=32';\nimport worldVisionImg from '../../../images/founds-icon/found-9.png?width=66&height=32';\nimport saveTheChildrenImg2x from '../../../images/founds-icon/found-1@2x.png?width=288&height=64';\nimport projectHopeImg2x from '../../../images/founds-icon/found-2@2x.png?width=128&height=64';\nimport internationalMedicalCorpsImg2x from '../../../images/founds-icon/found-3@2x.png?width=236&height=64';\nimport razomImg2x from '../../../images/founds-icon/found-4@2x.png?width=192&height=64';\nimport actionAgainstHunterImg2x from '../../../images/founds-icon/found-5@2x.png?width=102&height=64';\nimport charityFoundationSergiyPrytulaImg2x from '../../../images/founds-icon/found-6@2x.png?width=192&height=64';\nimport united24Img2x from '../../../images/founds-icon/found-7@2x.png?width=298&height=30';\nimport medecinsSansFrontieresImg2x from '../../../images/founds-icon/found-8@2x.png?width=182&height=64';\nimport worldVisionImg2x from '../../../images/founds-icon/found-9@2x.png?width=132&height=64';\n\nexport const founds = [\n  {\n    id: '1',\n    imgUrl: saveTheChildrenImg,\n    img2xUrl: saveTheChildrenImg2x,\n    companyName: 'Save the Children',\n    linkSupport:\n      'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n  },\n  {\n    id: '2',\n    imgUrl: projectHopeImg,\n    img2xUrl: projectHopeImg2x,\n    companyName: 'project HOPE',\n    linkSupport: 'https://www.projecthope.org/country/ukraine/',\n  },\n  {\n    id: '3',\n    imgUrl: internationalMedicalCorpsImg,\n    img2xUrl: internationalMedicalCorpsImg2x,\n    companyName: 'International Medical Corps',\n    linkSupport: 'https://internationalmedicalcorps.org/country/ukraine/',\n  },\n  {\n    id: '4',\n    imgUrl: razomImg,\n    img2xUrl: razomImg2x,\n    companyName: 'RAZOM',\n    linkSupport: 'https://www.razomforukraine.org/ua/homeua/',\n  },\n  {\n    id: '5',\n    imgUrl: actionAgainstHunterImg,\n    img2xUrl: actionAgainstHunterImg2x,\n    companyName: 'ACTION AGAINST HUNGER',\n    linkSupport: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n  },\n  {\n    id: '6',\n    imgUrl: charityFoundationSergiyPrytulaImg,\n    img2xUrl: charityFoundationSergiyPrytulaImg2x,\n    companyName: 'CHARITY FOUNDATION SERGIY PRYTULA',\n    linkSupport: 'https://prytulafoundation.org/',\n  },\n  {\n    id: '7',\n    imgUrl: united24Img,\n    img2xUrl: united24Img2x,\n    companyName: 'UNITED24',\n    linkSupport: 'https://u24.gov.ua/uk',\n  },\n  {\n    id: '8',\n    imgUrl: medecinsSansFrontieresImg,\n    img2xUrl: medecinsSansFrontieresImg2x,\n    companyName: 'MEDECINS SANS FRONTIERES',\n    linkSupport: 'https://www.msf.org/ukraine',\n  },\n  {\n    id: '9',\n    imgUrl: worldVisionImg,\n    img2xUrl: worldVisionImg2x,\n    companyName: 'World Vision',\n    linkSupport: 'https://www.wvi.org/emergencies/ukraine',\n  },\n];\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jK00T\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"Yxny7\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ako7b\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4I1un\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fymtf\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gEJ8E\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9Zkov\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3GCgO\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"enXkd\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7YieW\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lCf5p\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"nHNU1\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2ExoS\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lEx9i\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ieaY8\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"es3aC\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8lheb\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ik8BN\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"kE0J3\\\":\\\"index.4f7b3bd7.js\\\",\\\"jK00T\\\":\\\"found-1.ebbf1d9c.png\\\",\\\"Yxny7\\\":\\\"found-2.0ed97bef.png\\\",\\\"ako7b\\\":\\\"found-3.c1d39b03.png\\\",\\\"4I1un\\\":\\\"found-4.58197063.png\\\",\\\"fymtf\\\":\\\"found-5.6be93aec.png\\\",\\\"gEJ8E\\\":\\\"found-6.c4a6a2f3.png\\\",\\\"9Zkov\\\":\\\"found-7.7b78ddd2.png\\\",\\\"3GCgO\\\":\\\"found-8.c3a20212.png\\\",\\\"enXkd\\\":\\\"found-9.da483cbd.png\\\",\\\"7YieW\\\":\\\"found-1@2x.2ea429c3.png\\\",\\\"lCf5p\\\":\\\"found-2@2x.18f992c2.png\\\",\\\"nHNU1\\\":\\\"found-3@2x.f6b3493f.png\\\",\\\"2ExoS\\\":\\\"found-4@2x.fa976cbe.png\\\",\\\"lEx9i\\\":\\\"found-5@2x.6f77d1cc.png\\\",\\\"ieaY8\\\":\\\"found-6@2x.12d59ad2.png\\\",\\\"es3aC\\\":\\\"found-7@2x.409ed2d3.png\\\",\\\"8lheb\\\":\\\"found-8@2x.5ccb0953.png\\\",\\\"ik8BN\\\":\\\"found-9@2x.c83958db.png\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","pathName","window","location","pathname","endsWith","document","querySelectorAll","forEach","link","classList","contains","add","$08d3a02e893f5ea3$var$onCurrentLink","$95df7b3b6e22f0a8$var$mobileMenu","querySelector","$95df7b3b6e22f0a8$var$openMenuBtn","$95df7b3b6e22f0a8$var$closeMenuBtn","addEventListener","setAttribute","remove","body","matchMedia","e","matches","vh","innerHeight","documentElement","style","setProperty","$c0db2d35c4cb47ae$var$btnEl","innerWidth","toggle","$c63858b41bae701c$var$KEY_LS_THEME","$c63858b41bae701c$var$Theme","$c63858b41bae701c$var$switcherCheckboxEl","$c63858b41bae701c$var$htmlEl","theme","isLight","localStorage","setItem","JSON","stringify","replace","$c63858b41bae701c$var$onChangeTheme","$iSRJB","innerHTML","$6DDI9","renderFoundsList","$e7Ehp","founds","$iaGrY","default","direction","loop","slidesPerView","spaceBetween","breakpoints","modules","navigation","nextEl","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","constructor","args","el","params","prototype","toString","call","slice","$dNWnP","extend","document1","getDocument","swipers","containerEl","newParams","push","swiper","this","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsListeners","eventsAnyListeners","__modules__","Array","isArray","allModulesParams","mod","extendParams","$kmZuC","on","bind","once","off","emit","swiperParams","$1AMhv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","translate","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","getSlideIndex","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","index","filter","getAttribute","recalcSlides","enable","grabCursor","setGrabCursor","disable","unsetGrabCursor","setProgress","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","join","getSlideClasses","destroyed","emitSlidesClasses","updates","slidesPerViewDynamic","view","exact","size","swiperSize","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","update","setTranslate","translateValue","rtlTranslate","newTranslate","translated","setBreakpoint","imageEl","complete","$fa3Xa","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","width","height","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","static","newDefaults","extendedDefaults","defaults","module","m","installModule","prototypeGroup","protoMethod","use","$kdpim","$c4Sz9","$d3aa16e5c5539775$export$2e2bcd8739ae039","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","src","key","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","requestAnimationFrame","callback","cancelAnimationFrame","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","now","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","window1","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","map","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","time","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$a0cd23a932383e06$export$616841b86f802685","$a0cd23a932383e06$export$eb846d859f2895e6","selector","$a0cd23a932383e06$export$c8a8987d4410bf2d","tag","classes","$a0cd23a932383e06$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$a0cd23a932383e06$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$a0cd23a932383e06$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$a0cd23a932383e06$export$4184470d4bd0f986","prop","$a0cd23a932383e06$export$371885c503a01623","child","previousSibling","$a0cd23a932383e06$export$aedc7b608ca8e855","parents","parent","parentElement","$a0cd23a932383e06$export$6b974c5889da0bb5","fireCallBack","$a0cd23a932383e06$export$863f37913038cf77","includeMargins","offsetWidth","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","touch","DocumentTouch","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","needPerspectiveFix","isSafari","String","includes","major","minor","num","Number","isWebView","test","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$044a2fc60b096a26$export$2e2bcd8739ae039","events","handler","priority","self","method","event","onceHandler","__emitterProxy","apply","offAny","eventHandler","data","context","unshift","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$fbe9e371bf7fd468$export$81ecffcda7ad6ebb","skip","$b09adb3584f4f5c0$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$b09adb3584f4f5c0$var$unlazy","$b09adb3584f4f5c0$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","rewind","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","transitionDuration","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","slideRealIndex","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","onLoad","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$7V4dh","$d913afca7372dc81$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","type","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$d26a01a5d69e1b50$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$5c411feff72a52ef$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","points","point","minRatio","substr","value","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","url","uniqueNavElements","passiveListeners","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$e2yAf","$dbf6f3b26ef5d33c$export$2e2bcd8739ae039","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","onPrevClick","slidePrev","onNextClick","slideNext","initButton","destroyButton","_s","pagination","clickable","isHidden","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","appendElement","tempDOM","$0b71822481728c98$export$2e2bcd8739ae039","prependElement","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$42fdb4152f52aa22$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","shadowContainer","$4d553069489a40be$export$970fccbc1e72d162","markup","imgUrl","img2xUrl","companyName","linkSupport","padStart","$k1sAg","$a480f6d66f8075eb$export$b6cee15be9a3e0cd","$parcel$interopDefault","$gHR3B","$7s7Lq","$3LyjR","$jAQWC","$cOr5x","$56uAV","$4TpQg","$5CiRt","$b2rK7","$1rSYq","$3mHhv","$iBxiL","$QPB24","$hq2sv","$9YbxW","$4vJmW","$eyqk3","exports","URL","resolve","register","parse"],"version":3,"file":"index.4f7b3bd7.js.map"}